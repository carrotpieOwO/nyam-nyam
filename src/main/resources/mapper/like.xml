<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.carrot.nyam.repository.LikesRepository">


	<insert id="like" parameterType="com.carrot.nyam.model.likes.dto.ReqLikeDto">
		<selectKey resultType="int" keyProperty="id" order="BEFORE">
	        SELECT MAX(id)+1 FROM likes       
	    </selectKey>  
		insert into likes(reviewId, userId, createDate)
		values(#{reviewId}, #{userId}, now())
	</insert>
	
	<delete id="dislike">
		delete from likes where id = #{id}
	</delete>
	
	<select id="findByUserIdAndReviewID" resultType="com.carrot.nyam.model.likes.Likes">
		select * from likes where reviewId=#{reviewId} and userId=#{userId};	
	</select>
	
	<select id="likeCount" resultType="int">
		select count(*) from likes where reviewId=#{reviewId};
	</select>
	 
	<select id="likeList" resultType="com.carrot.nyam.model.likes.dto.ReqLikeInfoDto">
		select l.id, l.userId, u.username, u.profile from likes l inner join user u on l.userId = u.id where reviewId = #{reviewId} order by l.id	
	</select>
	
	<!-- 좋아요 알림 -->
 	<select id="findByLikeMe" resultType="com.carrot.nyam.model.likes.dto.ReqLikeMeDto">
		select l.*, u.username, u.profile, r.image1, r.id reviewId
		from likes l inner join user u on l.userId = u.id
		inner join review r on l.reviewId = r.id 
		where l.reviewId in 
		(select id from review where r.userId = #{userId}) order by id desc 
	</select>
 	
	
</mapper>